// This file is @generated by prost-build.
/// Flight requests all come in a single command path. For each underlying service
/// add any requests that return arrow record batch streams in a common command.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FlightRequest {
    #[prost(oneof = "flight_request::RequestType", tags = "1, 2")]
    pub request_type: ::core::option::Option<flight_request::RequestType>,
}
/// Nested message and enum types in `FlightRequest`.
pub mod flight_request {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum RequestType {
        #[prost(message, tag = "1")]
        CatalogRequest(super::super::super::catalog::v1alpha1::CatalogFlightRequest),
        #[prost(message, tag = "2")]
        ManifestRegistryRequest(
            super::super::super::manifest_registry::v1alpha1::ManifestRegistryFlightRequest,
        ),
    }
}
impl ::prost::Name for FlightRequest {
    const NAME: &'static str = "FlightRequest";
    const PACKAGE: &'static str = "rerun.flights.v1alpha1";
    fn full_name() -> ::prost::alloc::string::String {
        "rerun.flights.v1alpha1.FlightRequest".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/rerun.flights.v1alpha1.FlightRequest".into()
    }
}
