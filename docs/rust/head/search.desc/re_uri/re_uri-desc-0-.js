searchState.loadedDescShard("re_uri", 0, "Rerun uses its own URL scheme to access information across …\nURI pointing at the data underlying a dataset.\nWe use the <code>#fragment</code> of the URI to point to a specific …\nWe use the <code>/proxy</code> endpoint to access another <em>local</em> viewer.\nParsed from <code>rerun://addr:port/recording/12345</code> or …\nThe different schemes supported by Rerun.\nCurrently mandatory.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nURI pointing at the data underlying a dataset.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCurrently mandatory.\nReturns a <code>DatasetDataEndpoint</code> without any (optional) <code>?query</code>…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWe use the <code>#fragment</code> of the URI to point to a specific …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParse fragment, excluding hash\nConverts the <code>Origin</code> to a URL that starts with either <code>http</code> …\nConverts the <code>Origin</code> to a <code>http</code> URL.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParses a URL and returns the <code>crate::Origin</code> and the …\nWe use the <code>/proxy</code> endpoint to access another <em>local</em> viewer.\nParsed from <code>rerun://addr:port/recording/12345</code> or …\nReturn the parsed <code>#fragment</code> of the URI, if any.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe different schemes supported by Rerun.\nConverts a <code>Scheme</code> to either <code>http</code> or <code>https</code>.\nConverts a rerun url into a canonical http or https url.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed for formatting time ranges in URLs\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")